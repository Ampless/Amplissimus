name: CI

on: [push, workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1.4.0

      - run: flutter pub get
      - run: flutter test

  versions:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      commit: ${{ steps.versions.outputs.commit }}
      short_version: ${{ steps.versions.outputs.short_version }}
      commit_count: ${{ steps.versions.outputs.commit_count }}
      version: ${{ steps.versions.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Allows our versioning hacks
      - id: versions
        run: ./versions.sh

  release:
    runs-on: ubuntu-latest
    needs: versions
    steps:
      - uses: actions/checkout@v2
      - uses: Monorepo-Actions/setup-gh-cli@v1.0.0
      - run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
      - run: gh release create ${{ needs.versions.outputs.version }} -F RELEASE.md -p --target ${{ needs.versions.outputs.commit }} -t ${{ needs.versions.outputs.version }}

  build-mac:
    runs-on: macos-latest
    needs: [versions, release]
    env:
      short_version: ${{ needs.versions.outputs.short_version }}
      commit_count: ${{ needs.versions.outputs.commit_count }}
      version: ${{ needs.versions.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1.4.0
      - run: ./make mac
      - uses: Monorepo-Actions/setup-gh-cli@v1.0.0
      - run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
      - run: gh release upload ${{ needs.versions.outputs.version }} bin/*

  build-ios:
    runs-on: macos-latest
    needs: [versions, release]
    env:
      short_version: ${{ needs.versions.outputs.short_version }}
      commit_count: ${{ needs.versions.outputs.commit_count }}
      version: ${{ needs.versions.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1.4.0
      - run: ./make ios
      - uses: Monorepo-Actions/setup-gh-cli@v1.0.0
      - run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
      - run: gh release upload ${{ needs.versions.outputs.version }} bin/*

  build-windows:
    runs-on: windows-latest
    needs: [versions, release]
    env:
      short_version: ${{ needs.versions.outputs.short_version }}
      commit_count: ${{ needs.versions.outputs.commit_count }}
      version: ${{ needs.versions.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1.4.0

      - run: flutter config --no-analytics
      - run: flutter pub get
      - run: dart run make.dart win

      - uses: Monorepo-Actions/setup-gh-cli@v1.0.0
      - run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
      - run: gh release upload ${{ needs.versions.outputs.version }} bin\*

  build-linux:
    runs-on: ubuntu-latest
    needs: [versions, release]
    env:
      short_version: ${{ needs.versions.outputs.short_version }}
      commit_count: ${{ needs.versions.outputs.commit_count }}
      version: ${{ needs.versions.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1.4.0
        with:
          channel: dev

      - run: sudo apt update
      - run: sudo apt install -y ninja-build

      - run: ./make linux

      - uses: Monorepo-Actions/setup-gh-cli@v1.0.0
      - run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
      - run: gh release upload ${{ needs.versions.outputs.version }} bin/*

  build-android:
    runs-on: ubuntu-latest
    needs: [versions, release]
    env:
      short_version: ${{ needs.versions.outputs.short_version }}
      commit_count: ${{ needs.versions.outputs.commit_count }}
      version: ${{ needs.versions.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1.4.0
      
      - run: echo ${{ secrets.ANDROID_KEY }} | base64 -d > ampdroid.jks
      - run: echo storePassword=${{ secrets.ANDROID_PASSPHRASE }} > android/key.properties
      - run: echo keyPassword=${{ secrets.ANDROID_PASSPHRASE }} >> android/key.properties
      - run: echo keyAlias=ampkey >> android/key.properties
      - run: echo storeFile=$PWD/ampdroid.jks >> android/key.properties

      - run: ./make android

      - uses: Monorepo-Actions/setup-gh-cli@v1.0.0
      - run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
      - run: gh release upload ${{ needs.versions.outputs.version }} bin/*
